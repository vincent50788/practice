// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

package hello

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Eat                  string   `protobuf:"bytes,2,opt,name=eat,proto3" json:"eat,omitempty"`
	Work                 string   `protobuf:"bytes,3,opt,name=work,proto3" json:"work,omitempty"`
	Food                 []*Food  `protobuf:"bytes,4,rep,name=food,proto3" json:"food,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_d935f09942924ab9, []int{0}
}
func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (dst *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(dst, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *HelloRequest) GetEat() string {
	if m != nil {
		return m.Eat
	}
	return ""
}

func (m *HelloRequest) GetWork() string {
	if m != nil {
		return m.Work
	}
	return ""
}

func (m *HelloRequest) GetFood() []*Food {
	if m != nil {
		return m.Food
	}
	return nil
}

type HelloReply struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_d935f09942924ab9, []int{1}
}
func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (dst *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(dst, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type Food struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Food) Reset()         { *m = Food{} }
func (m *Food) String() string { return proto.CompactTextString(m) }
func (*Food) ProtoMessage()    {}
func (*Food) Descriptor() ([]byte, []int) {
	return fileDescriptor_hello_d935f09942924ab9, []int{2}
}
func (m *Food) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Food.Unmarshal(m, b)
}
func (m *Food) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Food.Marshal(b, m, deterministic)
}
func (dst *Food) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Food.Merge(dst, src)
}
func (m *Food) XXX_Size() int {
	return xxx_messageInfo_Food.Size(m)
}
func (m *Food) XXX_DiscardUnknown() {
	xxx_messageInfo_Food.DiscardUnknown(m)
}

var xxx_messageInfo_Food proto.InternalMessageInfo

func (m *Food) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Food) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "HelloRequest")
	proto.RegisterType((*HelloReply)(nil), "HelloReply")
	proto.RegisterType((*Food)(nil), "Food")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HelloClient is the client API for Hello service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloClient interface {
	Say(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
}

type helloClient struct {
	cc *grpc.ClientConn
}

func NewHelloClient(cc *grpc.ClientConn) HelloClient {
	return &helloClient{cc}
}

func (c *helloClient) Say(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/Hello/Say", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServer is the server API for Hello service.
type HelloServer interface {
	Say(context.Context, *HelloRequest) (*HelloReply, error)
}

func RegisterHelloServer(s *grpc.Server, srv HelloServer) {
	s.RegisterService(&_Hello_serviceDesc, srv)
}

func _Hello_Say_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServer).Say(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Hello/Say",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServer).Say(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hello_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Hello",
	HandlerType: (*HelloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Say",
			Handler:    _Hello_Say_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}

func init() { proto.RegisterFile("hello.proto", fileDescriptor_hello_d935f09942924ab9) }

var fileDescriptor_hello_d935f09942924ab9 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xcd, 0x4a, 0xc5, 0x30,
	0x10, 0x85, 0xad, 0x49, 0x2b, 0x4e, 0x15, 0x64, 0x16, 0x12, 0x5d, 0x95, 0xe8, 0xa2, 0x88, 0x64,
	0x51, 0xdf, 0x41, 0x5c, 0xd7, 0x27, 0x88, 0x74, 0xfc, 0xa1, 0x91, 0xa9, 0x4d, 0x5a, 0xe9, 0xdb,
	0x5f, 0x12, 0x52, 0xee, 0xdd, 0x9d, 0xf3, 0x85, 0xe4, 0xcb, 0x81, 0xfa, 0x9b, 0x9c, 0x63, 0x33,
	0xcd, 0x1c, 0x58, 0xff, 0xc0, 0xd5, 0x5b, 0xac, 0x3d, 0xfd, 0x2d, 0xe4, 0x03, 0x2a, 0xb8, 0xf8,
	0x25, 0xef, 0xed, 0x17, 0xa9, 0xa2, 0x29, 0xda, 0xcb, 0x7e, 0xaf, 0x78, 0x03, 0x82, 0x6c, 0x50,
	0xe7, 0x89, 0xc6, 0x88, 0x08, 0xf2, 0x9f, 0xe7, 0x51, 0x89, 0x84, 0x52, 0xc6, 0x3b, 0x90, 0x9f,
	0xcc, 0x83, 0x92, 0x8d, 0x68, 0xeb, 0xae, 0x34, 0xaf, 0xcc, 0x43, 0x9f, 0x90, 0x7e, 0x04, 0xc8,
	0xaa, 0xc9, 0x6d, 0x78, 0x0b, 0xd5, 0x4c, 0x7e, 0x71, 0x21, 0x7b, 0x72, 0xd3, 0x4f, 0x20, 0xe3,
	0x9d, 0xa8, 0x1b, 0x69, 0xcb, 0x87, 0x31, 0x46, 0xb2, 0x5a, 0xb7, 0x7f, 0x60, 0xb5, 0xae, 0x7b,
	0x86, 0x32, 0xbd, 0x88, 0x0f, 0x20, 0xde, 0xed, 0x86, 0xd7, 0xe6, 0x74, 0xcb, 0x7d, 0x6d, 0x8e,
	0x3e, 0x7d, 0xf6, 0x51, 0xa5, 0xc5, 0x2f, 0x87, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x4c, 0x42,
	0x25, 0x00, 0x01, 0x00, 0x00,
}
